FROM golang:1.9-alpine

ENV GOPATH=/go \
    PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

ARG USER_ID=1000
ARG GROUP_ID=1000

RUN set -ex \
  && echo "export PATH=$PATH" >> /etc/profile.d/set_path.sh

RUN set -ex \
  && apk add --no-cache --update \
    bash \
    ca-certificates \
    git \
    gcc \
    make \
    musl-dev \
    postgresql-client \
  && apk add --update --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community shadow

RUN set -ex \
  && groupadd -g "${GROUP_ID}" docker \
  && useradd -r -m -N -u "${USER_ID}" -g docker -s /bin/sh -d /home/docker docker \
  && mkdir -p /home/docker \
  && chown -R docker:docker /home/docker

# Install build dependencies
RUN set -ex \
 && apk add --no-cache --virtual .build-deps \
        curl make \
    \
 # Download and unpack Glide sources
 && curl -L -o /tmp/glide.tar.gz \
          https://github.com/Masterminds/glide/archive/v0.13.1.tar.gz \
 && tar -xzf /tmp/glide.tar.gz -C /tmp \
 && mkdir -p $GOPATH/src/github.com/Masterminds \
 && mv /tmp/glide-* $GOPATH/src/github.com/Masterminds/glide \
 && cd $GOPATH/src/github.com/Masterminds/glide \
    \
 # Build and install Glide executable
 && make install \
    \
 # Install Glide license
 && mkdir -p /usr/local/share/doc/glide \
 && cp LICENSE /usr/local/share/doc/glide/ \
    \
 # Cleanup unnecessary files
 && apk del .build-deps

CMD ["sh"]
